{"ast":null,"code":"var _jsxFileName = \"/Users/marlonpryor/Desktop/ClubMedia_Project/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from \"react-redux\";\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts.js';\nimport { useSelector } from \"react-redux\"; //need to get the currentID of current post. Not sure how to do it//\n\nconst Form = _ref => {\n  let {\n    currentID,\n    setCurrentID\n  } = _ref;\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const posts = useSelector(state => currentID ? state.posts.find(p => p._id === currentID) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentID) {\n      dispatch(updatePost(currentID, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Creating a Post\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({ ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useStyles","createPost","updatePost","useSelector","Form","currentID","setCurrentID","postData","setPostData","creator","title","message","tags","selectedFile","posts","state","find","p","_id","classes","dispatch","post","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"sources":["/Users/marlonpryor/Desktop/ClubMedia_Project/client/src/components/Form/Form.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from \"react-redux\";\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts.js';\nimport { useSelector } from \"react-redux\";\n//need to get the currentID of current post. Not sure how to do it//\n\nconst Form = ({ currentID, setCurrentID }) => {\n\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\n    \n    const posts = useSelector((state) => (currentID ? state.posts.find((p) => p._id === currentID) : null));\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n      }, [post]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentID) {\n            dispatch(updatePost(currentID, postData));\n        } else{\n            dispatch(createPost(postData));\n        }\n\n        \n\n    }\n    const clear = () => {\n\n    }\n    return(\n        <Paper className= {classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n            <Typography variant=\"h6\">Creating a Post</Typography>\n            <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })}/>\n            <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n            <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })}/>\n            <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value })}/>\n            <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}/></div>\n            <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}